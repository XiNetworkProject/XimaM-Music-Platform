require('dotenv').config({ path: '.env.local' });

const SUNO_API_KEY = process.env.SUNO_API_KEY;
const SUNO_API_URL = 'https://api.sunoapi.org/api/v1/generate';

async function checkStatus(taskId) {
  try {
    console.log(`üîç V√©rification du statut pour: ${taskId}`);
    
    // Essayer diff√©rentes URLs selon la documentation
    const urls = [
      `https://api.sunoapi.org/api/v1/generate/status/${taskId}`,
      `${SUNO_API_URL}/${taskId}`,
      `https://api.sunoapi.org/api/v1/status/${taskId}`,
      `https://api.sunoapi.org/api/v1/task/${taskId}`
    ];
    
    for (let i = 0; i < urls.length; i++) {
      const url = urls[i];
      console.log(`\nüîó Test URL ${i+1}: ${url}`);
      
      try {
        const response = await fetch(url, {
          headers: {
            'Authorization': `Bearer ${SUNO_API_KEY}`,
          },
        });

        console.log('üì° Status:', response.status, response.statusText);
        
        if (response.ok) {
          const data = await response.json();
          console.log('üìä R√©ponse compl√®te:', JSON.stringify(data, null, 2));
          
          const status = data.data?.status || data.status;
          const audioUrls = data.data?.data?.map(item => item.audio_url) || [];
          
          console.log(`\nüéµ Statut: ${status}`);
          console.log(`üéµ URLs audio: ${audioUrls.length}`);
          audioUrls.forEach((url, i) => console.log(`  ${i+1}. ${url}`));
          
          console.log(`\n‚úÖ URL fonctionnelle trouv√©e: ${url}`);
          return;
        } else {
          const errorText = await response.text();
          console.log('‚ùå Erreur:', errorText.substring(0, 100) + '...');
        }
      } catch (error) {
        console.log('‚ùå Erreur r√©seau:', error.message);
      }
    }
    
    console.log('\n‚ùå Aucune URL fonctionnelle trouv√©e');

  } catch (error) {
    console.error('‚ùå Erreur g√©n√©rale:', error.message);
  }
}

// V√©rifier le taskId de la g√©n√©ration pr√©c√©dente
const taskId = '340e6d7e681514572d18cc9a06218522';
checkStatus(taskId);
