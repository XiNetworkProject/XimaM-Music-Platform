const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '.env.local' });

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('Variables d\'environnement Supabase manquantes');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function checkAndCreateFAQs() {
  console.log('üîç V√©rification des FAQ existantes...');

  try {
    // V√©rifier les FAQ existantes
    const { data: existingFAQs, error: checkError } = await supabase
      .from('faq_items')
      .select('*')
      .eq('is_published', true);

    if (checkError) {
      console.error('‚ùå Erreur lors de la v√©rification:', checkError);
      return;
    }

    console.log(`üìä FAQ existantes: ${existingFAQs?.length || 0}`);

    if (existingFAQs && existingFAQs.length > 0) {
      console.log('‚úÖ Des FAQ existent d√©j√†');
      existingFAQs.forEach((faq, index) => {
        console.log(`${index + 1}. ${faq.question} (${faq.category}) - ${faq.helpful_count || 0} utile(s)`);
      });
      return;
    }

    console.log('üìù Cr√©ation de FAQ d\'exemple...');

    // FAQ d'exemple
    const sampleFAQs = [
      {
        question: 'Comment t√©l√©charger mes musiques ?',
        answer: 'Pour t√©l√©charger vos musiques, allez dans votre biblioth√®que, s√©lectionnez la musique souhait√©e et cliquez sur le bouton de t√©l√©chargement. Cette fonctionnalit√© est disponible pour les utilisateurs Premium.',
        category: 'player',
        tags: ['t√©l√©chargement', 'premium', 'biblioth√®que'],
        helpful_count: 15,
        order_index: 1
      },
      {
        question: 'Quels formats audio sont support√©s ?',
        answer: 'Synaura supporte les formats MP3, WAV, FLAC et AAC. Pour l\'upload, nous recommandons le format MP3 pour un bon √©quilibre entre qualit√© et taille de fichier.',
        category: 'upload',
        tags: ['formats', 'audio', 'mp3', 'wav'],
        helpful_count: 12,
        order_index: 2
      },
      {
        question: 'Comment fonctionne la g√©n√©ration de musique IA ?',
        answer: 'Notre IA utilise des mod√®les avanc√©s pour cr√©er de la musique originale bas√©e sur vos descriptions. Vous pouvez sp√©cifier le style, l\'humeur et m√™me ajouter des paroles. Plus vous √™tes pr√©cis, meilleur sera le r√©sultat.',
        category: 'ia',
        tags: ['ia', 'g√©n√©ration', 'musique', 'cr√©ation'],
        helpful_count: 8,
        order_index: 3
      },
      {
        question: 'Puis-je changer de plan d\'abonnement ?',
        answer: 'Oui, vous pouvez changer de plan √† tout moment depuis la page Abonnements. Les changements prennent effet imm√©diatement et sont proratis√©s.',
        category: 'abonnement',
        tags: ['abonnement', 'plan', 'changement'],
        helpful_count: 6,
        order_index: 4
      },
      {
        question: 'Comment partager mes cr√©ations ?',
        answer: 'Vous pouvez partager vos musiques via les liens de partage g√©n√©r√©s automatiquement, ou utiliser les r√©seaux sociaux int√©gr√©s. Chaque musique a un lien unique que vous pouvez partager.',
        category: 'general',
        tags: ['partage', 'r√©seaux sociaux', 'liens'],
        helpful_count: 4,
        order_index: 5
      }
    ];

    // Ins√©rer les FAQ d'exemple
    const { data: insertedFAQs, error: insertError } = await supabase
      .from('faq_items')
      .insert(sampleFAQs)
      .select();

    if (insertError) {
      console.error('‚ùå Erreur lors de l\'insertion:', insertError);
      return;
    }

    console.log(`‚úÖ ${insertedFAQs?.length || 0} FAQ cr√©√©es avec succ√®s`);
    insertedFAQs?.forEach((faq, index) => {
      console.log(`${index + 1}. ${faq.question} (${faq.category})`);
    });

  } catch (error) {
    console.error('‚ùå Erreur g√©n√©rale:', error);
  }
}

checkAndCreateFAQs();
